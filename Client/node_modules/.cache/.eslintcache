[{"D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\index.js":"1","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\App.js":"2","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\Login.jsx":"3","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\Register.jsx":"4","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\SetAvatar.jsx":"5","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\Anonymous.jsx":"6","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\Chat.jsx":"7","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\utils\\APIRoutes.js":"8","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\ChatRoom.js":"9"},{"size":447,"mtime":1676313862844,"results":"10","hashOfConfig":"11"},{"size":734,"mtime":1676313862841,"results":"12","hashOfConfig":"11"},{"size":4518,"mtime":1676414284604,"results":"13","hashOfConfig":"11"},{"size":5043,"mtime":1676313862847,"results":"14","hashOfConfig":"11"},{"size":4117,"mtime":1676313862848,"results":"15","hashOfConfig":"11"},{"size":4372,"mtime":1676322613911,"results":"16","hashOfConfig":"11"},{"size":1085,"mtime":1676382711664,"results":"17","hashOfConfig":"11"},{"size":339,"mtime":1676922778157,"results":"18","hashOfConfig":"11"},{"size":2363,"mtime":1676313862846,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jb1otm",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\index.js",[],[],"D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\App.js",[],[],"D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\Login.jsx",["51","52"],[],"import React,{useState,useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Logo from \"../assets/logo.png\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { loginRoute } from \"../utils/APIRoutes\";\r\nfunction Login(){\r\n    const navigate = useNavigate();\r\n    const [values,setValues]=useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover:true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n    }\r\n\r\n    const handleSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        if(handleValidation()){\r\n                console.log(\"in validation\",loginRoute);\r\n            const {password,username} = values;\r\n            const {data} = await axios.post(loginRoute,{\r\n                username,\r\n                password,\r\n            });\r\n            if (data === undefined){\r\n            // if(data.status === false){\r\n                console.log(false)\r\n                toast.error(data.msg, toastOptions);\r\n            }\r\n            if(data != undefined){\r\n            // if(data.status === true){\r\n                console.log(true)\r\n                localStorage.setItem(`eecs4481-project`, JSON.stringify(data.user));\r\n                navigate(\"/\");\r\n            }\r\n            \r\n        }\r\n    };\r\n\r\n    const handleValidation =() => {\r\n        const {password,username} = values;\r\n        if(password === \"\"){\r\n            console.log(\"inm validation\",toast);\r\n            toast.error(\"Username and password is required\",toastOptions);\r\n            return false;\r\n        }else if (username.length === \"\"){\r\n            toast.error(\"Username and password is required\",toastOptions);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        setValues({...values,[event.target.name]:event.target.value});\r\n    };\r\n    return (\r\n    <>\r\n        <FormContainer>\r\n            <form onSubmit={(event)=>handleSubmit(event)}>\r\n                <div className=\"brand\">\r\n                    <img src={Logo} alt=\"Logo\" />\r\n                    <h1>Sneaky Admin</h1>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Username\" name=\"username\" onChange={(e)=> handleChange(e)}/>\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={(e)=> handleChange(e)}/>\r\n                <button type=\"submit\">Log In</button>\r\n                <span>  \r\n                    Don't have an account ? <Link to=\"/register\">Register</Link>\r\n                    </span>\r\n                    <span>  \r\n                    Are you an Anonymous User ? <Link to=\"/chat\">Join Chat</Link>\r\n                    </span>\r\n            </form>\r\n        </FormContainer>\r\n        <ToastContainer />\r\n    </>\r\n    );\r\n}\r\n\r\nconst FormContainer = styled.div`\r\nheight: 100vh;\r\nwidth: 100vw;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\ngap : 1rem;\r\nalign-items: center;\r\nbackground-color: #b3e3c0;\r\n.brand{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img{\r\n        height: 9rem;\r\n    }\r\n    h1{\r\n        color: white;\r\n        font-size: 2.5em;\r\n    }\r\n}\r\nform{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    background-color: #56b870;\r\n    border-radius: 2rem;\r\n    padding: 3rem 5rem;\r\n    input{\r\n        background-color: white;\r\n        padding: 1rem;\r\n        border: 0.1rem solid #707b8c;\r\n        border-radius: 0.4rem;\r\n        color: black;\r\n        width: 100%;\r\n        font-size: 1rem;\r\n        &:focus{\r\n            border: 0.1rem solid #707b8c;\r\n            outline: none;\r\n        }\r\n    }\r\n    button{\r\n        background-color: #254f30;\r\n        color: white;\r\n        padding: 1rem 2rem;\r\n        border: none;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n        border-radius: 0.4rem;\r\n        font-size: 1rem;\r\n        text-transform: uppercase;\r\n        transition: 0.5s ease-in-out;\r\n        &:hover{\r\n            background-color: #158a34;\r\n        }\r\n    }\r\n    span {\r\n        color: white;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        a {\r\n            color: #37523e;\r\n            text-transform: none;\r\n            font-weight: bold;\r\n            \r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nexport default Login;","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\Register.jsx",["53"],[],"import React,{useState,useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Logo from \"../assets/logo.png\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { registerRoute } from \"../utils/APIRoutes\";\r\nfunction Register(){\r\n    const navigate = useNavigate();\r\n    const [values,setValues]=useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n\r\n    const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover:true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n    }\r\n\r\n    const handleSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        if(handleValidation()){\r\n                console.log(\"in validation\",registerRoute);\r\n            const {password,username,email} = values;\r\n            const {data} = await axios.post(registerRoute,{\r\n                username,\r\n                email,\r\n                password,\r\n            });\r\n            if(data.status === false){\r\n                toast.error(data.msg, toastOptions);\r\n            }\r\n            if(data.status === true){\r\n                localStorage.setItem(`eecs4481-project`, JSON.stringify(data.user));\r\n                navigate(\"/\");\r\n            }\r\n            \r\n        }\r\n    };\r\n\r\n    const handleValidation =() => {\r\n        const {password,confirmPassword,username,email} = values;\r\n        if(password !== confirmPassword){\r\n            console.log(\"inm validation\",toast);\r\n            toast.error(\"password and confrim password should be same\",toastOptions);\r\n            return false;\r\n        }else if (username.length <3){\r\n            toast.error(\"Username should be greater than 3 characters\",toastOptions);\r\n            return false;\r\n        }else if (password.length <8){\r\n            toast.error(\"Password should be equal or greater than 8 characters\",toastOptions);\r\n            return false;\r\n        }else if (email === \"\"){\r\n            toast.error(\"email is required\",toastOptions);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        setValues({...values,[event.target.name]:event.target.value});\r\n    };\r\n    return (\r\n    <>\r\n        <FormContainer>\r\n            <form onSubmit={(event)=>handleSubmit(event)}>\r\n                <div className=\"brand\">\r\n                    <img src={Logo} alt=\"Logo\" />\r\n                    <h1>Admin Register</h1>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Username\" name=\"username\" onChange={(e)=> handleChange(e)}/>\r\n                <input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={(e)=> handleChange(e)}/>\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={(e)=> handleChange(e)}/>\r\n                <input type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" onChange={(e)=> handleChange(e)}/>\r\n                <button type=\"submit\">Create User</button>\r\n                <span>  \r\n                    Already have an account ? <Link to=\"/login\">Login</Link>\r\n                    </span>\r\n                    <span>  \r\n                    Are you an Anonymous User ? <Link to=\"/Anonymous\">Join Chat</Link>\r\n                    </span>\r\n            </form>\r\n        </FormContainer>\r\n        <ToastContainer />\r\n    </>\r\n    );\r\n}\r\n\r\nconst FormContainer = styled.div`\r\nheight: 100vh;\r\nwidth: 100vw;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\ngap : 1rem;\r\nalign-items: center;\r\nbackground-color: #b3e3c0;\r\n.brand{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img{\r\n        height: 9rem;\r\n    }\r\n    h1{\r\n        color: white;\r\n        font-size: 2.5em;\r\n    }\r\n}\r\nform{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    background-color: #56b870;\r\n    border-radius: 2rem;\r\n    padding: 3rem 5rem;\r\n    input{\r\n        background-color: white;\r\n        padding: 1rem;\r\n        border: 0.1rem solid #707b8c;\r\n        border-radius: 0.4rem;\r\n        color: black;\r\n        width: 100%;\r\n        font-size: 1rem;\r\n        &:focus{\r\n            border: 0.1rem solid #707b8c;\r\n            outline: none;\r\n        }\r\n    }\r\n    button{\r\n        background-color: #254f30;\r\n        color: white;\r\n        padding: 1rem 2rem;\r\n        border: none;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n        border-radius: 0.4rem;\r\n        font-size: 1rem;\r\n        text-transform: uppercase;\r\n        transition: 0.5s ease-in-out;\r\n        &:hover{\r\n            background-color: #158a34;\r\n        }\r\n    }\r\n    span {\r\n        color: white;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        a {\r\n            color: #37523e;\r\n            text-transform: none;\r\n            font-weight: bold;\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n`;\r\n\r\nexport default Register;","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\SetAvatar.jsx",["54","55"],[],"import React,{useState,useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport loader from \"../assets/loader.png\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\r\nimport * as Buffer from 'Buffer';\r\nexport default function SetAvatar() {\r\n  \r\n    const api = \"https://api.multiavatar.com/45678945\";\r\n    const navigate = useNavigate();\r\n    const [avatars,setAvatars] = useState([]);\r\n    const [isLoading,setIsLoading] = useState([true]);\r\n    const [selectedAvatars,setSelectedAvatars] = useState(undefined);\r\n    const toastOptions = {\r\n        position: \"bottom-right\",\r\n        autoClose: 8000,\r\n        pauseOnHover:true,\r\n        draggable: true,\r\n        theme: \"dark\",\r\n        };\r\n    const setProfilePicture = async () => {\r\n        if(selectedAvatars === undefined){\r\n            toast.error(\"Please select an avatar\",toastOptions);\r\n        } else{\r\n            const user = await JSON.parse(localStorage.getItem(\"eecs4481-project\"));\r\n            const { data } = await axios.post(`${setAvatarRoute}/${user._id}`,{image: avatars[selectedAvatars]});\r\n        }\r\n        \r\n    };\r\n    useEffect(() => {\r\n        getImages();\r\n    },[]);\r\n    const getImages = async () =>{\r\n        const data =[];\r\n        for(let i=0; i<4; i++){\r\n            const image = await axios.get(`${api}/${Math.round(Math.random() * 1000 )}`\r\n            );\r\n            const buffer = new Buffer(image.data);\r\n            data.push(buffer.toString(\"base64\"));\r\n        }\r\n        setAvatars(data);\r\n        setIsLoading(false);\r\n\r\n    };\r\n    return(\r\n    <>\r\n    {\r\n        isLoading ? <Container>\r\n            <img src={loader} alt=\"loader\" className=\"loader\" />\r\n\r\n        </Container>: (\r\n\r\n        \r\n        <Container>\r\n            <div className=\"title-container\">\r\n                <h1>\r\n                    Pick an avatar as your profile pictures\r\n                </h1>\r\n            </div>\r\n            <div className=\"avatars\">{\r\n                avatars.map((avatar,index)=>{\r\n                        return (\r\n                            <div key = {index} className={`avatar ${selectedAvatars === index ? \"selected\":\"\"}`}>\r\n                                <img src={`data:image/svg+xml;base64,${avatar}`} alt = \"avatar\"\r\n                                onClick={()=> setSelectedAvatars(index)}\r\n                                />\r\n                            </div>\r\n                        \r\n                        )\r\n                    })\r\n                }</div>\r\n                <button className=\"submit-btn\" onClick={setProfilePicture}>Set as Profile Picture</button>\r\n            </Container>\r\n            )}\r\n            \r\n        <ToastContainer />\r\n    </>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    gap: 3rem;\r\n    background-color: #131324;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    .loader{\r\n        max-inline-size: 100%;\r\n    }\r\n    .title-container{\r\n        h1{\r\n            color: white;\r\n        }\r\n    }\r\n    .avatars{\r\n        display: flex;\r\n        gap: 2rem;\r\n        .avatar{\r\n            border: 0.4rem solid transparent;\r\n            padding: 0.4rem;\r\n            border-radius: 5.rem;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            transition: 0.5s ease-in-out;\r\n        }\r\n        img{\r\n            height: 6rem;\r\n        }\r\n        .selected{\r\n            border: 0.4 rem solid #4e0eff;\r\n        }\r\n    }\r\n   \r\n    .submit-btn{\r\n        background-color: #254f30;\r\n        color: white;\r\n        padding: 1rem 2rem;\r\n        border: none;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n        border-radius: 0.4rem;\r\n        font-size: 1rem;\r\n        text-transform: uppercase;\r\n        transition: 0.5s ease-in-out;\r\n        &:hover{\r\n            background-color: #158a34;\r\n        }\r\n`;\r\n\r\n","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\Anonymous.jsx",["56","57"],[],"import React,{useState,useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Logo from \"../assets/logo.png\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { anonymousRoute } from \"../utils/APIRoutes\";\r\n\r\nfunction Anonymous(){\r\n    const navigate = useNavigate();\r\n    const [values,setValues]=useState({\r\n        username: \"\",\r\n        usercode: \"\",\r\n    });\r\n\r\n    const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover:true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n    }\r\n\r\n    const handleSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        if(handleValidation()){\r\n                console.log(\"in validation\",anonymousRoute);\r\n            const {usercode,username} = values;\r\n            const {data} = await axios.post(anonymousRoute,{\r\n                name: username //,\r\n                // usercode,\r\n            });\r\n            if(data.status === false){\r\n                toast.error(data.msg, toastOptions);\r\n            }\r\n            if(data.status === true){\r\n                localStorage.setItem(`eecs4481-project`, JSON.stringify(data.user));\r\n                navigate(\"/\");\r\n            }\r\n            \r\n        }\r\n    };\r\n\r\n    const handleValidation =() => {\r\n        const {usercode,username} = values;\r\n        if(usercode === \"\"){\r\n            console.log(\"inm validation\",toast);\r\n            toast.error(\"Username and usercode is required\",toastOptions);\r\n            return false;\r\n        }else if (username.length === \"\"){\r\n            toast.error(\"Username and usercode is required\",toastOptions);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        setValues({...values,[event.target.name]:event.target.value});\r\n    };\r\n    return (\r\n    <>\r\n        <FormContainer>\r\n            <form onSubmit={(event)=>handleSubmit(event)}>\r\n                <div className=\"brand\">\r\n                    <img src={Logo} alt=\"Logo\" />\r\n                    <h1>Sneaky Chat</h1>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Username\" name=\"username\" onChange={(e)=> handleChange(e)}/>\r\n                <input type=\"text\" placeholder=\"User code\" name=\"usercode\" onChange={(e)=> handleChange(e)}/>\r\n                <button type=\"submit\">Log In</button>\r\n                <span>  \r\n                    Don't have an account ? <Link to=\"/register\">Register</Link>\r\n                    </span>\r\n                <span>\r\n                    Are you Admin ? <Link to=\"/login\">Login</Link>\r\n                </span>\r\n            </form>\r\n        </FormContainer>\r\n        <ToastContainer />\r\n    </>\r\n    );\r\n}\r\n\r\nconst FormContainer = styled.div`\r\nheight: 100vh;\r\nwidth: 100vw;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\ngap : 1rem;\r\nalign-items: center;\r\nbackground-color: #b4c2d9;\r\n.brand{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img{\r\n        height: 9rem;\r\n    }\r\n    h1{\r\n        color: white;\r\n        font-size: 2.5em;\r\n    }\r\n}\r\nform{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    background-color: #6f86ab;\r\n    border-radius: 2rem;\r\n    padding: 3rem 5rem;\r\n    input{\r\n        background-color: white;\r\n        padding: 1rem;\r\n        border: 0.1rem solid #707b8c;\r\n        border-radius: 0.4rem;\r\n        color: black;\r\n        width: 100%;\r\n        font-size: 1rem;\r\n        &:focus{\r\n            border: 0.1rem solid #707b8c;\r\n            outline: none;\r\n        }\r\n    }\r\n    button{\r\n        background-color: #4163bf;\r\n        color: white;\r\n        padding: 1rem 2rem;\r\n        border: none;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n        border-radius: 0.4rem;\r\n        font-size: 1rem;\r\n        text-transform: uppercase;\r\n        transition: 0.5s ease-in-out;\r\n        &:hover{\r\n            background-color: #4e0eff;\r\n        }\r\n    }\r\n    span {\r\n        color: white;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        a {\r\n            color: #adc1f7;\r\n            text-transform: none;\r\n            font-weight: bold;\r\n            \r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nexport default Anonymous;","D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\Chat.jsx",[],[],"D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\utils\\APIRoutes.js",[],[],"D:\\VSCode\\SharedWVM\\JS\\HelpDeskApp\\HelpDeskAppV2\\Client\\src\\pages\\ChatRoom.js",[],[],{"ruleId":"58","severity":1,"message":"59","line":1,"column":24,"nodeType":"60","messageId":"61","endLine":1,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":38,"column":21,"nodeType":"64","messageId":"65","endLine":38,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":1,"column":24,"nodeType":"60","messageId":"61","endLine":1,"endColumn":33},{"ruleId":"58","severity":1,"message":"66","line":13,"column":11,"nodeType":"60","messageId":"61","endLine":13,"endColumn":19},{"ruleId":"58","severity":1,"message":"67","line":29,"column":21,"nodeType":"60","messageId":"61","endLine":29,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":1,"column":24,"nodeType":"60","messageId":"61","endLine":1,"endColumn":33},{"ruleId":"58","severity":1,"message":"68","line":29,"column":20,"nodeType":"60","messageId":"61","endLine":29,"endColumn":28},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'navigate' is assigned a value but never used.","'data' is assigned a value but never used.","'usercode' is assigned a value but never used."]