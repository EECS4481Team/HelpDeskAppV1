{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode\\\\SharedWVM\\\\JS\\\\HelpDeskAppV2\\\\HelpDeskAppV2\\\\Client\\\\src\\\\pages\\\\SetAvatar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport loader from \"../assets/loader.png\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\nimport * as Buffer from 'Buffer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetAvatar() {\n  _s();\n  const api = \"https://api.multiavatar.com/45678945\";\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState([true]);\n  const [selectedAvatars, setSelectedAvatars] = useState(undefined);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n  const setProfilePicture = async () => {\n    if (selectedAvatars === undefined) {\n      toast.error(\"Please select an avatar\", toastOptions);\n    } else {\n      const user = await JSON.parse(localStorage.getItem(\"eecs4481-project\"));\n      const {\n        data\n      } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n        image: avatars[selectedAvatars]\n      });\n    }\n  };\n  useEffect(() => {\n    getImages();\n  }, []);\n  const getImages = async () => {\n    const data = [];\n    for (let i = 0; i < 4; i++) {\n      const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n      const buffer = new Buffer(image.data);\n      data.push(buffer.toString(\"base64\"));\n    }\n    setAvatars(data);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loader,\n        alt: \"loader\",\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick an avatar as your profile pictures\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars\",\n        children: avatars.map((avatar, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `avatar ${selectedAvatars === index ? \"selected\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${avatar}`,\n              alt: \"avatar\",\n              onClick: () => setSelectedAvatars(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: setProfilePicture,\n        children: \"Set as Profile Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(SetAvatar, \"1f92CqkdjtEmD2LPLD6J9tipz8U=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvatar;\nconst Container = styled.div`\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 3rem;\n    background-color: #131324;\n    height: 100vh;\n    width: 100vw;\n    .loader{\n        max-inline-size: 100%;\n    }\n    .title-container{\n        h1{\n            color: white;\n        }\n    }\n    .avatars{\n        display: flex;\n        gap: 2rem;\n        .avatar{\n            border: 0.4rem solid transparent;\n            padding: 0.4rem;\n            border-radius: 5.rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            transition: 0.5s ease-in-out;\n        }\n        img{\n            height: 6rem;\n        }\n        .selected{\n            border: 0.4 rem solid #4e0eff;\n        }\n    }\n   \n    .submit-btn{\n        background-color: #254f30;\n        color: white;\n        padding: 1rem 2rem;\n        border: none;\n        font-weight: bold;\n        cursor: pointer;\n        border-radius: 0.4rem;\n        font-size: 1rem;\n        text-transform: uppercase;\n        transition: 0.5s ease-in-out;\n        &:hover{\n            background-color: #158a34;\n        }\n`;\n_c2 = Container;\nvar _c, _c2;\n$RefreshReg$(_c, \"SetAvatar\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","loader","ToastContainer","toast","axios","setAvatarRoute","Buffer","SetAvatar","api","navigate","avatars","setAvatars","isLoading","setIsLoading","selectedAvatars","setSelectedAvatars","undefined","toastOptions","position","autoClose","pauseOnHover","draggable","theme","setProfilePicture","error","user","JSON","parse","localStorage","getItem","data","post","_id","image","getImages","i","get","Math","round","random","buffer","push","toString","map","avatar","index","Container","div"],"sources":["D:/VSCode/SharedWVM/JS/HelpDeskAppV2/HelpDeskAppV2/Client/src/pages/SetAvatar.jsx"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport loader from \"../assets/loader.png\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\r\nimport * as Buffer from 'Buffer';\r\nexport default function SetAvatar() {\r\n  \r\n    const api = \"https://api.multiavatar.com/45678945\";\r\n    const navigate = useNavigate();\r\n    const [avatars,setAvatars] = useState([]);\r\n    const [isLoading,setIsLoading] = useState([true]);\r\n    const [selectedAvatars,setSelectedAvatars] = useState(undefined);\r\n    const toastOptions = {\r\n        position: \"bottom-right\",\r\n        autoClose: 8000,\r\n        pauseOnHover:true,\r\n        draggable: true,\r\n        theme: \"dark\",\r\n        };\r\n    const setProfilePicture = async () => {\r\n        if(selectedAvatars === undefined){\r\n            toast.error(\"Please select an avatar\",toastOptions);\r\n        } else{\r\n            const user = await JSON.parse(localStorage.getItem(\"eecs4481-project\"));\r\n            const { data } = await axios.post(`${setAvatarRoute}/${user._id}`,{image: avatars[selectedAvatars]});\r\n        }\r\n        \r\n    };\r\n    useEffect(() => {\r\n        getImages();\r\n    },[]);\r\n    const getImages = async () =>{\r\n        const data =[];\r\n        for(let i=0; i<4; i++){\r\n            const image = await axios.get(`${api}/${Math.round(Math.random() * 1000 )}`\r\n            );\r\n            const buffer = new Buffer(image.data);\r\n            data.push(buffer.toString(\"base64\"));\r\n        }\r\n        setAvatars(data);\r\n        setIsLoading(false);\r\n\r\n    };\r\n    return(\r\n    <>\r\n    {\r\n        isLoading ? <Container>\r\n            <img src={loader} alt=\"loader\" className=\"loader\" />\r\n\r\n        </Container>: (\r\n\r\n        \r\n        <Container>\r\n            <div className=\"title-container\">\r\n                <h1>\r\n                    Pick an avatar as your profile pictures\r\n                </h1>\r\n            </div>\r\n            <div className=\"avatars\">{\r\n                avatars.map((avatar,index)=>{\r\n                        return (\r\n                            <div key = {index} className={`avatar ${selectedAvatars === index ? \"selected\":\"\"}`}>\r\n                                <img src={`data:image/svg+xml;base64,${avatar}`} alt = \"avatar\"\r\n                                onClick={()=> setSelectedAvatars(index)}\r\n                                />\r\n                            </div>\r\n                        \r\n                        )\r\n                    })\r\n                }</div>\r\n                <button className=\"submit-btn\" onClick={setProfilePicture}>Set as Profile Picture</button>\r\n            </Container>\r\n            )}\r\n            \r\n        <ToastContainer />\r\n    </>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    gap: 3rem;\r\n    background-color: #131324;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    .loader{\r\n        max-inline-size: 100%;\r\n    }\r\n    .title-container{\r\n        h1{\r\n            color: white;\r\n        }\r\n    }\r\n    .avatars{\r\n        display: flex;\r\n        gap: 2rem;\r\n        .avatar{\r\n            border: 0.4rem solid transparent;\r\n            padding: 0.4rem;\r\n            border-radius: 5.rem;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            transition: 0.5s ease-in-out;\r\n        }\r\n        img{\r\n            height: 6rem;\r\n        }\r\n        .selected{\r\n            border: 0.4 rem solid #4e0eff;\r\n        }\r\n    }\r\n   \r\n    .submit-btn{\r\n        background-color: #254f30;\r\n        color: white;\r\n        padding: 1rem 2rem;\r\n        border: none;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n        border-radius: 0.4rem;\r\n        font-size: 1rem;\r\n        text-transform: uppercase;\r\n        transition: 0.5s ease-in-out;\r\n        &:hover{\r\n            background-color: #158a34;\r\n        }\r\n`;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}